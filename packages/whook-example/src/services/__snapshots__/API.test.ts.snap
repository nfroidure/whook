// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API should always have the same amount of basic authenticated endpoints 1`] = `[]`;

exports[`API should always have the same amount of bearer authenticated endpoints 1`] = `
[
  "get /diagnostic",
  "get /graphql",
  "get /openAPI",
  "post /graphql",
]
`;

exports[`API should always have the same amount of endpoints 1`] = `
[
  "get /delay",
  "get /diagnostic",
  "get /graphql",
  "get /openAPI",
  "get /ping",
  "get /time",
  "get /{pathParam1}/{pathParam2}",
  "options /delay",
  "options /diagnostic",
  "options /echo",
  "options /graphql",
  "options /openAPI",
  "options /ping",
  "options /time",
  "options /{pathParam1}/{pathParam2}",
  "post /graphql",
  "put /echo",
]
`;

exports[`API should always have the same amount of non authenticated endpoints 1`] = `
[
  "get /delay",
  "get /ping",
  "get /time",
  "get /{pathParam1}/{pathParam2}",
  "options /delay",
  "options /diagnostic",
  "options /echo",
  "options /graphql",
  "options /openAPI",
  "options /ping",
  "options /time",
  "options /{pathParam1}/{pathParam2}",
  "put /echo",
]
`;

exports[`API should always have the same amount of optionally authenticated endpoints 1`] = `
[
  "get /openAPI",
]
`;

exports[`API should always have the same amount of publicly documented endpoints 1`] = `
[
  "get /delay",
  "get /diagnostic",
  "get /graphql",
  "get /openAPI",
  "get /ping",
  "get /time",
  "get /{pathParam1}/{pathParam2}",
  "options /delay",
  "options /diagnostic",
  "options /echo",
  "options /graphql",
  "options /openAPI",
  "options /ping",
  "options /time",
  "options /{pathParam1}/{pathParam2}",
  "post /graphql",
  "put /echo",
]
`;

exports[`API should work 1`] = `
{
  "API": {
    "components": {
      "callbacks": {
        "DelayCallback": {
          "{$request.query.callbackUrl}": {
            "post": {
              "operationId": "postDelayCallback",
              "parameters": [
                {
                  "$ref": "#/components/parameters/duration",
                },
              ],
              "responses": {
                "204": {
                  "description": "Delay trigger received.",
                },
              },
            },
          },
        },
      },
      "headers": {},
      "parameters": {
        "duration": {
          "description": "Duration in milliseconds",
          "in": "query",
          "name": "duration",
          "required": true,
          "schema": {
            "type": "number",
          },
        },
        "pathParam1": {
          "description": "A number param",
          "in": "path",
          "name": "pathParam1",
          "required": true,
          "schema": {
            "type": "number",
          },
        },
        "pathParam2": {
          "description": "A string item",
          "in": "path",
          "name": "pathParam2",
          "required": true,
          "schema": {
            "type": "string",
          },
        },
        "queryParam": {
          "description": "A list of items",
          "in": "query",
          "name": "queryParam",
          "required": true,
          "schema": {
            "items": {
              "type": "string",
            },
            "type": "array",
          },
        },
      },
      "requestBodies": {
        "Echo": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Echo",
              },
            },
          },
          "required": true,
        },
      },
      "responses": {
        "Diagnostic": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "transactions": {
                    "additionalProperties": true,
                    "type": "object",
                  },
                },
                "required": [
                  "transactions",
                ],
                "type": "object",
              },
            },
          },
          "description": "Diagnostic",
        },
        "Echo": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Echo",
              },
            },
          },
          "description": "Echo response",
        },
      },
      "schemas": {
        "Echo": {
          "additionalProperties": false,
          "properties": {
            "echo": {
              "type": "string",
            },
          },
          "required": [
            "echo",
          ],
          "type": "object",
        },
        "TimeSchema": {
          "additionalProperties": false,
          "properties": {
            "currentDate": {
              "format": "date-time",
              "type": "string",
            },
          },
          "type": "object",
        },
      },
      "securitySchemes": {
        "bearerAuth": {
          "description": "Bearer authentication with a user API token",
          "scheme": "bearer",
          "type": "http",
        },
      },
    },
    "info": {
      "description": "A basic Whook server",
      "title": "@whook/example",
      "version": "1.1.0",
    },
    "openapi": "3.1.0",
    "paths": {
      "/delay": {
        "get": {
          "callbacks": {
            "DelayCallback": {
              "$ref": "#/components/callbacks/DelayCallback",
            },
          },
          "operationId": "getDelay",
          "parameters": [
            {
              "$ref": "#/components/parameters/duration",
            },
            {
              "in": "query",
              "name": "callbackUrl",
              "schema": {
                "format": "uri",
                "type": "string",
              },
            },
          ],
          "responses": {
            "204": {
              "description": "Delay expired",
            },
          },
          "summary": "Answer after a given delay.",
          "tags": [
            "example",
          ],
        },
        "options": {
          "operationId": "getDelayCORS",
          "parameters": [
            {
              "description": "Duration in milliseconds",
              "in": "query",
              "name": "duration",
              "required": false,
              "schema": {
                "type": "number",
              },
            },
            {
              "in": "query",
              "name": "callbackUrl",
              "schema": {
                "format": "uri",
                "type": "string",
              },
            },
          ],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
      },
      "/diagnostic": {
        "get": {
          "operationId": "getDiagnostic",
          "parameters": [],
          "responses": {
            "200": {
              "$ref": "#/components/responses/Diagnostic",
            },
          },
          "security": [
            {
              "bearerAuth": [
                "admin",
              ],
            },
          ],
          "summary": "Returns current API's transactions.",
          "tags": [
            "system",
          ],
        },
        "options": {
          "operationId": "getDiagnosticCORS",
          "parameters": [
            {
              "in": "query",
              "name": "access_token",
              "schema": {
                "type": "string",
              },
            },
          ],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
      },
      "/echo": {
        "options": {
          "operationId": "putEchoCORS",
          "parameters": [],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
        "put": {
          "operationId": "putEcho",
          "requestBody": {
            "$ref": "#/components/requestBodies/Echo",
          },
          "responses": {
            "200": {
              "$ref": "#/components/responses/Echo",
            },
          },
          "summary": "Echoes what it takes.",
          "tags": [
            "example",
          ],
        },
      },
      "/graphql": {
        "get": {
          "operationId": "getGraphQL",
          "parameters": [
            {
              "description": "The GraphQL query",
              "in": "query",
              "name": "query",
              "required": true,
              "schema": {
                "type": "string",
              },
            },
            {
              "description": "The GraphQL variables",
              "in": "query",
              "name": "variables",
              "required": false,
              "schema": {
                "type": "string",
              },
            },
            {
              "description": "The GraphQL operation name",
              "in": "query",
              "name": "operationName",
              "required": false,
              "schema": {
                "type": "string",
              },
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": true,
                    "type": "object",
                  },
                },
              },
              "description": "Successfully ran the GraphQL query",
            },
          },
          "security": [
            {
              "bearerAuth": [
                "admin",
              ],
            },
          ],
          "summary": "Graphql endpoint",
          "tags": [
            "graphql",
          ],
        },
        "options": {
          "operationId": "getGraphQLCORS",
          "parameters": [
            {
              "description": "The GraphQL query",
              "in": "query",
              "name": "query",
              "required": false,
              "schema": {
                "type": "string",
              },
            },
            {
              "description": "The GraphQL variables",
              "in": "query",
              "name": "variables",
              "required": false,
              "schema": {
                "type": "string",
              },
            },
            {
              "description": "The GraphQL operation name",
              "in": "query",
              "name": "operationName",
              "required": false,
              "schema": {
                "type": "string",
              },
            },
            {
              "in": "query",
              "name": "access_token",
              "schema": {
                "type": "string",
              },
            },
          ],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
        "post": {
          "operationId": "postGraphQL",
          "parameters": [],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "properties": {
                    "query": {
                      "type": "string",
                    },
                  },
                  "type": "object",
                },
              },
            },
            "description": "The GraphQL query",
            "required": false,
          },
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": true,
                    "type": "object",
                  },
                },
              },
              "description": "Successfully ran the GraphQL query",
            },
          },
          "security": [
            {
              "bearerAuth": [
                "admin",
              ],
            },
          ],
          "summary": "Graphql endpoint",
          "tags": [
            "graphql",
          ],
        },
      },
      "/openAPI": {
        "get": {
          "operationId": "getOpenAPI",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                  },
                },
              },
              "description": "Provides the private Open API documentation",
            },
          },
          "security": [
            {},
            {
              "bearerAuth": [
                "admin",
              ],
            },
          ],
          "summary": "Get the API documentation.",
          "tags": [
            "system",
          ],
        },
        "options": {
          "operationId": "getOpenAPICORS",
          "parameters": [
            {
              "in": "query",
              "name": "access_token",
              "schema": {
                "type": "string",
              },
            },
          ],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
      },
      "/ping": {
        "get": {
          "operationId": "getPing",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "additionalProperties": false,
                    "properties": {
                      "pong": {
                        "enum": [
                          "pong",
                        ],
                        "type": "string",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Pong",
            },
          },
          "summary": "Checks API's availability.",
          "tags": [
            "system",
          ],
        },
        "options": {
          "operationId": "getPingCORS",
          "parameters": [],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
      },
      "/time": {
        "get": {
          "operationId": "getTime",
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TimeSchema",
                  },
                },
              },
              "description": "Server current date",
            },
          },
          "summary": "Get API internal clock date.",
          "tags": [
            "system",
          ],
        },
        "options": {
          "operationId": "getTimeCORS",
          "parameters": [],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
      },
      "/{pathParam1}/{pathParam2}": {
        "get": {
          "operationId": "getParameters",
          "parameters": [
            {
              "$ref": "#/components/parameters/pathParam1",
            },
            {
              "$ref": "#/components/parameters/pathParam2",
            },
            {
              "$ref": "#/components/parameters/queryParam",
            },
            {
              "in": "header",
              "name": "a-header",
              "schema": {
                "type": "boolean",
              },
            },
            {
              "in": "header",
              "name": "aMultiHeader",
              "schema": {
                "items": {
                  "type": "number",
                },
                "type": "array",
              },
            },
          ],
          "responses": {
            "200": {
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "aHeader": {
                        "type": "boolean",
                      },
                      "aMultiHeader": {
                        "items": {
                          "type": "number",
                        },
                        "type": "array",
                      },
                      "pathParam1": {
                        "type": "number",
                      },
                      "pathParam2": {
                        "type": "string",
                      },
                      "queryParam": {
                        "items": {
                          "type": "string",
                        },
                        "type": "array",
                      },
                    },
                    "type": "object",
                  },
                },
              },
              "description": "Delay expired",
            },
          },
          "summary": "An handler intended to test parameters.",
          "tags": [
            "example",
          ],
        },
        "options": {
          "operationId": "getParametersCORS",
          "parameters": [
            {
              "$ref": "#/components/parameters/pathParam1",
            },
            {
              "$ref": "#/components/parameters/pathParam2",
            },
            {
              "description": "A list of items",
              "in": "query",
              "name": "queryParam",
              "required": false,
              "schema": {
                "items": {
                  "type": "string",
                },
                "type": "array",
              },
            },
          ],
          "responses": {
            "200": {
              "description": "CORS sent.",
            },
          },
          "summary": "Enable OPTIONS for CORS",
          "tags": [
            "CORS",
          ],
        },
      },
    },
    "security": [],
    "servers": [
      {
        "url": "http://localhost:1337",
      },
    ],
    "tags": [
      {
        "name": "system",
      },
    ],
  },
  "logCalls": [
    [
      "debug",
      "🦄 - Initializing the API service!",
    ],
  ],
}
`;
