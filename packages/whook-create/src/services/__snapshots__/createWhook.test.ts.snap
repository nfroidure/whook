// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`initCreateWhook should fail with access problems 2`] = `
{
  "copyCalls": [
    [
      "/var/lib/node/node_modules/whook-example",
      "/home/whoiam/projects/yolo",
      {
        "filter": [Function],
      },
    ],
  ],
  "execCalls": [
    [
      "git init",
      {
        "cwd": "/home/whoiam/projects/yolo",
      },
      [Function],
    ],
  ],
  "logCalls": [
    [
      "warning",
      "🏁️ - Starting Whook project's creation!",
    ],
  ],
  "oraCalls": [],
  "oraStartCalls": [],
  "oraStopAndPersistCalls": [],
  "outputFileCalls": [
    [
      "/home/whoiam/projects/yolo/src/watch.ts",
      "
the watch.ts file contents
 with'./' replaced so
 equal to './'!
",
    ],
    [
      "/home/whoiam/projects/yolo/README.md",
      "# super-project

YOLO

## Author
Wayne Campbell

",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.local",
      "# Loaded when APP_ENV=local

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.production",
      "# Loaded when APP_ENV=production

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.node.development",
      "# Loaded when NODE_ENV=development

# Allow to kill the process with still open sockets
DESTROY_SOCKETS=1'

# Common env var to get dev outputs
DEV_MODE=1 
",
    ],
    [
      "/home/whoiam/projects/yolo/package.json",
      "{
  "name": "super-project",
  "description": "A new Whook project",
  "version": "0.0.0",
  "license": "SEE LICENSE",
  "engines": {
    "node": ">=20.11.1"
  },
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "private": true,
  "keywords": [
    "whook"
  ],
  "author": {
    "name": "Wayne Campbell",
    "email": "wayne@warner.com"
  },
  "scripts": {
    "apitypes": "npm run --silent whook -- generateOpenAPISchema --authenticated=true | npm run --silent whook -- generateOpenAPITypes > src/openAPISchema.d.ts",
    "architecture": "jsarch 'src/**/*.ts' > ARCHITECTURE.md && git add ARCHITECTURE.md",
    "build": "rimraf 'dist' && tsc --outDir dist",
    "cover": "npm run jest -- --coverage",
    "debug": "NODE_OPTIONS=\${NODE_OPTIONS:-'--inspect'} NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 DEBUG=\${DEBUG:-whook} tsx bin/whook.js",
    "dev": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/run.js",
    "format": "npm run prettier",
    "jest": "NODE_OPTIONS=--experimental-vm-modules NODE_ENV=test jest",
    "lint": "eslint 'src/**/*.ts'",
    "postbuild": "NODE_ENV=\${NODE_ENV:-development} tsx src/runBuild.js",
    "prettier": "prettier --write 'src/**/*.ts'",
    "rebuild": "swc ./src -s -d dist -C jsc.target=es2022",
    "repl": "NODE_ENV=\${NODE_ENV:-development} tsx src/run.js -- __inject repl",
    "start": "NODE_ENV=\${NODE_ENV:-development} node dist/run.js",
    "test": "NODE_ENV=test npm run build && npm run jest",
    "type-check": "tsc --pretty --noEmit",
    "watch": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/runWatch.js",
    "whook": "NODE_ENV=\${NODE_ENV:-development} whook"
  },
  "files": [
    "bin",
    "dist",
    "src",
    "LICENSE",
    "README.md",
    "CHANGELOG.md"
  ],
  "dependencies": {
    "@apidevtools/swagger-parser": "^10.1.0",
    "@whook/authorization": "<current_version>",
    "@whook/cors": "<current_version>",
    "@whook/http-router": "<current_version>",
    "@whook/http-server": "<current_version>",
    "@whook/http-transaction": "<current_version>",
    "@whook/swagger-ui": "<current_version>",
    "@whook/whook": "<current_version>",
    "application-services": "^7.0.0",
    "common-services": "^17.0.0",
    "http-auth-utils": "^6.0.1",
    "jwt-service": "^11.0.0",
    "knifecycle": "^18.0.0",
    "openapi-types": "^12.1.3",
    "pkg-dir": "^8.0.0",
    "strict-qs": "^8.0.3",
    "type-fest": "^4.30.0",
    "yerror": "^8.0.0",
    "yhttperror": "^8.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.16.0",
    "@swc/cli": "^0.5.2",
    "@swc/core": "^1.10.0",
    "@swc/helpers": "^0.5.15",
    "@swc/jest": "^0.2.37",
    "axios": "^1.7.9",
    "esbuild-node-externals": "^1.15.0",
    "eslint": "^9.16.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jest": "^28.9.0",
    "eslint-plugin-prettier": "^5.2.1",
    "jest": "^29.7.0",
    "jsarch": "^6.1.2",
    "prettier": "^3.4.2",
    "rimraf": "^6.0.1",
    "schema2dts": "^7.0.2",
    "tsx": "^4.7.1",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.17.0"
  },
  "prettier": {
    "semi": true,
    "printWidth": 80,
    "singleQuote": true,
    "trailingComma": "all",
    "proseWrap": "always"
  },
  "jest": {
    "coverageReporters": [
      "lcov",
      "html"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "roots": [
      "<rootDir>/src"
    ],
    "testEnvironment": "node",
    "transform": {
      "^.+\\\\.tsx?$": [
        "@swc/jest",
        {}
      ]
    },
    "moduleNameMapper": {
      "#(.*)": "<rootDir>/../../node_modules/$1",
      "(.+)\\\\.js": "$1"
    },
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "prettierPath": null
  },
  "overrides": {
    "eslint": "^9.16.0"
  }
}",
    ],
    [
      "/home/whoiam/projects/yolo/tsconfig.json",
      "{
  "compilerOptions": {
    "module": "Node16",
    "moduleResolution": "Node16",
    "target": "es2022",
    "noImplicitAny": false,
    "removeComments": false,
    "preserveConstEnums": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "strict": true,
    "declaration": true,
    "outDir": "dist",
    "sourceMap": true
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}",
    ],
    [
      "/home/whoiam/projects/yolo/LICENSE",
      "Copyright Wayne Campbell, all rights reserved.",
    ],
    [
      "/home/whoiam/projects/yolo/.gitignore",
      "node_modules

# Whook's files
builds/
.env*
",
    ],
  ],
  "readFileCalls": [
    [
      "/var/lib/node/node_modules/whook-example/package.json",
    ],
    [
      "/var/lib/node/node_modules/whook-example/src/watch.ts",
    ],
    [
      "/var/lib/node/node_modules/whook-example/README.md",
    ],
  ],
  "readdirCalls": [
    [
      "/var/lib/node/node_modules/whook-example/src/config",
    ],
  ],
}
`;

exports[`initCreateWhook should handle git initialization problems 2`] = `
{
  "copyCalls": [
    [
      "/var/lib/node/node_modules/whook-example",
      "/home/whoiam/projects/yolo",
      {
        "filter": [Function],
      },
    ],
  ],
  "execCalls": [
    [
      "git init",
      {
        "cwd": "/home/whoiam/projects/yolo",
      },
      [Function],
    ],
    [
      "npm i",
      {
        "cwd": "/home/whoiam/projects/yolo",
      },
      [Function],
    ],
  ],
  "logCalls": [
    [
      "warning",
      "🏁️ - Starting Whook project's creation!",
    ],
    [
      "error",
      "⚠️ - Could not initialize the git project!",
    ],
    [
      "warning",
      "✔️ - Project created!",
    ],
    [
      "warning",
      "➕ - Run \`cd yolo\` to enter the project.",
    ],
    [
      "warning",
      "➕ - Then run \`npm run dev -- __inject httpServer,process,dryRun\` to check installation.",
    ],
    [
      "warning",
      "➕ - And finally run \`npm run watch\` to start dev!",
    ],
  ],
  "oraCalls": [
    [
      {
        "text": "Installing dependencies...",
      },
    ],
  ],
  "oraStartCalls": [
    [],
  ],
  "oraStopAndPersistCalls": [
    [
      {
        "symbol": "✔️",
        "text": "Installed dependencies",
      },
    ],
  ],
  "outputFileCalls": [
    [
      "/home/whoiam/projects/yolo/src/watch.ts",
      "
the watch.ts file contents
 with'./' replaced so
 equal to './'!
",
    ],
    [
      "/home/whoiam/projects/yolo/README.md",
      "# super-project

YOLO

## Author
Wayne Campbell

",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.local",
      "# Loaded when APP_ENV=local

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.production",
      "# Loaded when APP_ENV=production

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.node.development",
      "# Loaded when NODE_ENV=development

# Allow to kill the process with still open sockets
DESTROY_SOCKETS=1'

# Common env var to get dev outputs
DEV_MODE=1 
",
    ],
    [
      "/home/whoiam/projects/yolo/package.json",
      "{
  "name": "super-project",
  "description": "A new Whook project",
  "version": "0.0.0",
  "license": "SEE LICENSE",
  "engines": {
    "node": ">=20.11.1"
  },
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "private": true,
  "keywords": [
    "whook"
  ],
  "author": {
    "name": "Wayne Campbell",
    "email": "wayne@warner.com"
  },
  "scripts": {
    "apitypes": "npm run --silent whook -- generateOpenAPISchema --authenticated=true | npm run --silent whook -- generateOpenAPITypes > src/openAPISchema.d.ts",
    "architecture": "jsarch 'src/**/*.ts' > ARCHITECTURE.md && git add ARCHITECTURE.md",
    "build": "rimraf 'dist' && tsc --outDir dist",
    "cover": "npm run jest -- --coverage",
    "debug": "NODE_OPTIONS=\${NODE_OPTIONS:-'--inspect'} NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 DEBUG=\${DEBUG:-whook} tsx bin/whook.js",
    "dev": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/run.js",
    "format": "npm run prettier",
    "jest": "NODE_OPTIONS=--experimental-vm-modules NODE_ENV=test jest",
    "lint": "eslint 'src/**/*.ts'",
    "postbuild": "NODE_ENV=\${NODE_ENV:-development} tsx src/runBuild.js",
    "prettier": "prettier --write 'src/**/*.ts'",
    "rebuild": "swc ./src -s -d dist -C jsc.target=es2022",
    "repl": "NODE_ENV=\${NODE_ENV:-development} tsx src/run.js -- __inject repl",
    "start": "NODE_ENV=\${NODE_ENV:-development} node dist/run.js",
    "test": "NODE_ENV=test npm run build && npm run jest",
    "type-check": "tsc --pretty --noEmit",
    "watch": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/runWatch.js",
    "whook": "NODE_ENV=\${NODE_ENV:-development} whook"
  },
  "files": [
    "bin",
    "dist",
    "src",
    "LICENSE",
    "README.md",
    "CHANGELOG.md"
  ],
  "dependencies": {
    "@apidevtools/swagger-parser": "^10.1.0",
    "@whook/authorization": "<current_version>",
    "@whook/cors": "<current_version>",
    "@whook/http-router": "<current_version>",
    "@whook/http-server": "<current_version>",
    "@whook/http-transaction": "<current_version>",
    "@whook/swagger-ui": "<current_version>",
    "@whook/whook": "<current_version>",
    "application-services": "^7.0.0",
    "common-services": "^17.0.0",
    "http-auth-utils": "^6.0.1",
    "jwt-service": "^11.0.0",
    "knifecycle": "^18.0.0",
    "openapi-types": "^12.1.3",
    "pkg-dir": "^8.0.0",
    "strict-qs": "^8.0.3",
    "type-fest": "^4.30.0",
    "yerror": "^8.0.0",
    "yhttperror": "^8.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.16.0",
    "@swc/cli": "^0.5.2",
    "@swc/core": "^1.10.0",
    "@swc/helpers": "^0.5.15",
    "@swc/jest": "^0.2.37",
    "axios": "^1.7.9",
    "esbuild-node-externals": "^1.15.0",
    "eslint": "^9.16.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jest": "^28.9.0",
    "eslint-plugin-prettier": "^5.2.1",
    "jest": "^29.7.0",
    "jsarch": "^6.1.2",
    "prettier": "^3.4.2",
    "rimraf": "^6.0.1",
    "schema2dts": "^7.0.2",
    "tsx": "^4.7.1",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.17.0"
  },
  "prettier": {
    "semi": true,
    "printWidth": 80,
    "singleQuote": true,
    "trailingComma": "all",
    "proseWrap": "always"
  },
  "jest": {
    "coverageReporters": [
      "lcov",
      "html"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "roots": [
      "<rootDir>/src"
    ],
    "testEnvironment": "node",
    "transform": {
      "^.+\\\\.tsx?$": [
        "@swc/jest",
        {}
      ]
    },
    "moduleNameMapper": {
      "#(.*)": "<rootDir>/../../node_modules/$1",
      "(.+)\\\\.js": "$1"
    },
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "prettierPath": null
  },
  "overrides": {
    "eslint": "^9.16.0"
  }
}",
    ],
    [
      "/home/whoiam/projects/yolo/tsconfig.json",
      "{
  "compilerOptions": {
    "module": "Node16",
    "moduleResolution": "Node16",
    "target": "es2022",
    "noImplicitAny": false,
    "removeComments": false,
    "preserveConstEnums": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "strict": true,
    "declaration": true,
    "outDir": "dist",
    "sourceMap": true
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}",
    ],
    [
      "/home/whoiam/projects/yolo/LICENSE",
      "Copyright Wayne Campbell, all rights reserved.",
    ],
    [
      "/home/whoiam/projects/yolo/.gitignore",
      "node_modules

# Whook's files
builds/
.env*
",
    ],
  ],
  "readFileCalls": [
    [
      "/var/lib/node/node_modules/whook-example/package.json",
    ],
    [
      "/var/lib/node/node_modules/whook-example/src/watch.ts",
    ],
    [
      "/var/lib/node/node_modules/whook-example/README.md",
    ],
  ],
  "readdirCalls": [
    [
      "/var/lib/node/node_modules/whook-example/package.json",
    ],
    [
      "/var/lib/node/node_modules/whook-example/src/watch.ts",
    ],
    [
      "/var/lib/node/node_modules/whook-example/README.md",
    ],
  ],
}
`;

exports[`initCreateWhook should handle network issues 2`] = `
{
  "copyCalls": [
    [
      "/var/lib/node/node_modules/whook-example",
      "/home/whoiam/projects/yolo",
      {
        "filter": [Function],
      },
    ],
  ],
  "execCalls": [
    [
      "git init",
      {
        "cwd": "/home/whoiam/projects/yolo",
      },
      [Function],
    ],
    [
      "npm i",
      {
        "cwd": "/home/whoiam/projects/yolo",
      },
      [Function],
    ],
  ],
  "logCalls": [
    [
      "warning",
      "🏁️ - Starting Whook project's creation!",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/package.json" => "/home/whoiam/projects/yolo/package.json ("..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/package-lock.json" => "/home/whoiam/projects/yolo/package-lock.json ("..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/LICENSE" => "/home/whoiam/projects/yolo/LICENSE ("..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/dist/index.js" => "/home/whoiam/projects/yolo/dist/index.js ("../..").",
    ],
    [
      "debug",
      "💱 - Moving "/var/lib/node/node_modules/whook-example/src/index.js" => "/home/whoiam/projects/yolo/src/index.js".",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/coverage/index.html" => "/home/whoiam/projects/yolo/coverage/index.html ("../..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/node_modules/whook/index.js" => "/home/whoiam/projects/yolo/node_modules/whook/index.js ("../../..").",
    ],
    [
      "error",
      "⚠️ - Could not initialize the git project!",
    ],
    [
      "error",
      "⚠️ - Could not retrieve the \`.gitignore\` file contents from: "https://www.toptal.com/developers/gitignore/api/osx,node,linux"",
    ],
    [
      "warning",
      "✔️ - Project created!",
    ],
    [
      "warning",
      "➕ - Run \`cd yolo\` to enter the project.",
    ],
    [
      "warning",
      "➕ - Then run \`npm run dev -- __inject httpServer,process,dryRun\` to check installation.",
    ],
    [
      "warning",
      "➕ - And finally run \`npm run watch\` to start dev!",
    ],
  ],
  "oraCalls": [
    [
      {
        "text": "Installing dependencies...",
      },
    ],
  ],
  "oraStartCalls": [
    [],
  ],
  "oraStopAndPersistCalls": [
    [
      {
        "symbol": "✔️",
        "text": "Installed dependencies",
      },
    ],
  ],
  "outputFileCalls": [
    [
      "/home/whoiam/projects/yolo/src/watch.ts",
      "
the watch.ts file contents
 with'./' replaced so
 equal to './'!
",
    ],
    [
      "/home/whoiam/projects/yolo/README.md",
      "# super-project

YOLO

## Author
Wayne Campbell

",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.local",
      "# Loaded when APP_ENV=local

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.production",
      "# Loaded when APP_ENV=production

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.node.development",
      "# Loaded when NODE_ENV=development

# Allow to kill the process with still open sockets
DESTROY_SOCKETS=1'

# Common env var to get dev outputs
DEV_MODE=1 
",
    ],
    [
      "/home/whoiam/projects/yolo/package.json",
      "{
  "name": "super-project",
  "description": "A new Whook project",
  "version": "0.0.0",
  "license": "SEE LICENSE",
  "engines": {
    "node": ">=20.11.1"
  },
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "private": true,
  "keywords": [
    "whook"
  ],
  "author": {
    "name": "Wayne Campbell",
    "email": "wayne@warner.com"
  },
  "scripts": {
    "apitypes": "npm run --silent whook -- generateOpenAPISchema --authenticated=true | npm run --silent whook -- generateOpenAPITypes > src/openAPISchema.d.ts",
    "architecture": "jsarch 'src/**/*.ts' > ARCHITECTURE.md && git add ARCHITECTURE.md",
    "build": "rimraf 'dist' && tsc --outDir dist",
    "cover": "npm run jest -- --coverage",
    "debug": "NODE_OPTIONS=\${NODE_OPTIONS:-'--inspect'} NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 DEBUG=\${DEBUG:-whook} tsx bin/whook.js",
    "dev": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/run.js",
    "format": "npm run prettier",
    "jest": "NODE_OPTIONS=--experimental-vm-modules NODE_ENV=test jest",
    "lint": "eslint 'src/**/*.ts'",
    "postbuild": "NODE_ENV=\${NODE_ENV:-development} tsx src/runBuild.js",
    "prettier": "prettier --write 'src/**/*.ts'",
    "rebuild": "swc ./src -s -d dist -C jsc.target=es2022",
    "repl": "NODE_ENV=\${NODE_ENV:-development} tsx src/run.js -- __inject repl",
    "start": "NODE_ENV=\${NODE_ENV:-development} node dist/run.js",
    "test": "NODE_ENV=test npm run build && npm run jest",
    "type-check": "tsc --pretty --noEmit",
    "watch": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/runWatch.js",
    "whook": "NODE_ENV=\${NODE_ENV:-development} whook"
  },
  "files": [
    "bin",
    "dist",
    "src",
    "LICENSE",
    "README.md",
    "CHANGELOG.md"
  ],
  "dependencies": {
    "@apidevtools/swagger-parser": "^10.1.0",
    "@whook/authorization": "<current_version>",
    "@whook/cors": "<current_version>",
    "@whook/http-router": "<current_version>",
    "@whook/http-server": "<current_version>",
    "@whook/http-transaction": "<current_version>",
    "@whook/swagger-ui": "<current_version>",
    "@whook/whook": "<current_version>",
    "application-services": "^7.0.0",
    "common-services": "^17.0.0",
    "http-auth-utils": "^6.0.1",
    "jwt-service": "^11.0.0",
    "knifecycle": "^18.0.0",
    "openapi-types": "^12.1.3",
    "pkg-dir": "^8.0.0",
    "strict-qs": "^8.0.3",
    "type-fest": "^4.30.0",
    "yerror": "^8.0.0",
    "yhttperror": "^8.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.16.0",
    "@swc/cli": "^0.5.2",
    "@swc/core": "^1.10.0",
    "@swc/helpers": "^0.5.15",
    "@swc/jest": "^0.2.37",
    "axios": "^1.7.9",
    "esbuild-node-externals": "^1.15.0",
    "eslint": "^9.16.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jest": "^28.9.0",
    "eslint-plugin-prettier": "^5.2.1",
    "jest": "^29.7.0",
    "jsarch": "^6.1.2",
    "prettier": "^3.4.2",
    "rimraf": "^6.0.1",
    "schema2dts": "^7.0.2",
    "tsx": "^4.7.1",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.17.0"
  },
  "prettier": {
    "semi": true,
    "printWidth": 80,
    "singleQuote": true,
    "trailingComma": "all",
    "proseWrap": "always"
  },
  "jest": {
    "coverageReporters": [
      "lcov",
      "html"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "roots": [
      "<rootDir>/src"
    ],
    "testEnvironment": "node",
    "transform": {
      "^.+\\\\.tsx?$": [
        "@swc/jest",
        {}
      ]
    },
    "moduleNameMapper": {
      "#(.*)": "<rootDir>/../../node_modules/$1",
      "(.+)\\\\.js": "$1"
    },
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "prettierPath": null
  },
  "overrides": {
    "eslint": "^9.16.0"
  }
}",
    ],
    [
      "/home/whoiam/projects/yolo/tsconfig.json",
      "{
  "compilerOptions": {
    "module": "Node16",
    "moduleResolution": "Node16",
    "target": "es2022",
    "noImplicitAny": false,
    "removeComments": false,
    "preserveConstEnums": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "strict": true,
    "declaration": true,
    "outDir": "dist",
    "sourceMap": true
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}",
    ],
    [
      "/home/whoiam/projects/yolo/LICENSE",
      "Copyright Wayne Campbell, all rights reserved.",
    ],
  ],
  "readFileCalls": [
    [
      "/var/lib/node/node_modules/whook-example/package.json",
    ],
    [
      "/var/lib/node/node_modules/whook-example/src/watch.ts",
    ],
    [
      "/var/lib/node/node_modules/whook-example/README.md",
    ],
  ],
  "readdirCalls": [
    [
      "/var/lib/node/node_modules/whook-example/package.json",
    ],
    [
      "/var/lib/node/node_modules/whook-example/src/watch.ts",
    ],
    [
      "/var/lib/node/node_modules/whook-example/README.md",
    ],
  ],
}
`;

exports[`initCreateWhook should work 2`] = `
{
  "copyCalls": [
    [
      "/var/lib/node/node_modules/whook-example",
      "/home/whoiam/projects/yolo",
      {
        "filter": [Function],
      },
    ],
  ],
  "execCalls": [
    [
      "git init",
      {
        "cwd": "/home/whoiam/projects/yolo",
      },
      [Function],
    ],
    [
      "npm i",
      {
        "cwd": "/home/whoiam/projects/yolo",
      },
      [Function],
    ],
  ],
  "logCalls": [
    [
      "warning",
      "🏁️ - Starting Whook project's creation!",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/package.json" => "/home/whoiam/projects/yolo/package.json ("..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/package-lock.json" => "/home/whoiam/projects/yolo/package-lock.json ("..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/LICENSE" => "/home/whoiam/projects/yolo/LICENSE ("..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/dist/index.js" => "/home/whoiam/projects/yolo/dist/index.js ("../..").",
    ],
    [
      "debug",
      "💱 - Moving "/var/lib/node/node_modules/whook-example/src/index.js" => "/home/whoiam/projects/yolo/src/index.js".",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/coverage/index.html" => "/home/whoiam/projects/yolo/coverage/index.html ("../..").",
    ],
    [
      "debug",
      "💱 - Discarding "/var/lib/node/node_modules/whook-example/node_modules/whook/index.js" => "/home/whoiam/projects/yolo/node_modules/whook/index.js ("../../..").",
    ],
    [
      "warning",
      "✔️ - Project created!",
    ],
    [
      "warning",
      "➕ - Run \`cd yolo\` to enter the project.",
    ],
    [
      "warning",
      "➕ - Then run \`npm run dev -- __inject httpServer,process,dryRun\` to check installation.",
    ],
    [
      "warning",
      "➕ - And finally run \`npm run watch\` to start dev!",
    ],
  ],
  "oraCalls": [
    [
      {
        "text": "Installing dependencies...",
      },
    ],
  ],
  "oraStartCalls": [
    [],
  ],
  "oraStopAndPersistCalls": [
    [
      {
        "symbol": "✔️",
        "text": "Installed dependencies",
      },
    ],
  ],
  "outputFileCalls": [
    [
      "/home/whoiam/projects/yolo/src/watch.ts",
      "
the watch.ts file contents
 with'./' replaced so
 equal to './'!
",
    ],
    [
      "/home/whoiam/projects/yolo/README.md",
      "# super-project

YOLO

## Author
Wayne Campbell

",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.local",
      "# Loaded when APP_ENV=local

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.app.production",
      "# Loaded when APP_ENV=production

# For JWT signing
JWT_SECRET=oudelali
",
    ],
    [
      "/home/whoiam/projects/yolo/.env.node.development",
      "# Loaded when NODE_ENV=development

# Allow to kill the process with still open sockets
DESTROY_SOCKETS=1'

# Common env var to get dev outputs
DEV_MODE=1 
",
    ],
    [
      "/home/whoiam/projects/yolo/package.json",
      "{
  "name": "super-project",
  "description": "A new Whook project",
  "version": "0.0.0",
  "license": "SEE LICENSE",
  "engines": {
    "node": ">=20.11.1"
  },
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "type": "module",
  "private": true,
  "keywords": [
    "whook"
  ],
  "author": {
    "name": "Wayne Campbell",
    "email": "wayne@warner.com"
  },
  "scripts": {
    "apitypes": "npm run --silent whook -- generateOpenAPISchema --authenticated=true | npm run --silent whook -- generateOpenAPITypes > src/openAPISchema.d.ts",
    "architecture": "jsarch 'src/**/*.ts' > ARCHITECTURE.md && git add ARCHITECTURE.md",
    "build": "rimraf 'dist' && tsc --outDir dist",
    "cover": "npm run jest -- --coverage",
    "debug": "NODE_OPTIONS=\${NODE_OPTIONS:-'--inspect'} NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 DEBUG=\${DEBUG:-whook} tsx bin/whook.js",
    "dev": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/run.js",
    "format": "npm run prettier",
    "jest": "NODE_OPTIONS=--experimental-vm-modules NODE_ENV=test jest",
    "lint": "eslint 'src/**/*.ts'",
    "postbuild": "NODE_ENV=\${NODE_ENV:-development} tsx src/runBuild.js",
    "prettier": "prettier --write 'src/**/*.ts'",
    "rebuild": "swc ./src -s -d dist -C jsc.target=es2022",
    "repl": "NODE_ENV=\${NODE_ENV:-development} tsx src/run.js -- __inject repl",
    "start": "NODE_ENV=\${NODE_ENV:-development} node dist/run.js",
    "test": "NODE_ENV=test npm run build && npm run jest",
    "type-check": "tsc --pretty --noEmit",
    "watch": "NODE_ENV=\${NODE_ENV:-development} DEV_MODE=1 DESTROY_SOCKETS=1 tsx src/runWatch.js",
    "whook": "NODE_ENV=\${NODE_ENV:-development} whook"
  },
  "files": [
    "bin",
    "dist",
    "src",
    "LICENSE",
    "README.md",
    "CHANGELOG.md"
  ],
  "dependencies": {
    "@apidevtools/swagger-parser": "^10.1.0",
    "@whook/authorization": "<current_version>",
    "@whook/cors": "<current_version>",
    "@whook/http-router": "<current_version>",
    "@whook/http-server": "<current_version>",
    "@whook/http-transaction": "<current_version>",
    "@whook/swagger-ui": "<current_version>",
    "@whook/whook": "<current_version>",
    "application-services": "^7.0.0",
    "common-services": "^17.0.0",
    "http-auth-utils": "^6.0.1",
    "jwt-service": "^11.0.0",
    "knifecycle": "^18.0.0",
    "openapi-types": "^12.1.3",
    "pkg-dir": "^8.0.0",
    "strict-qs": "^8.0.3",
    "type-fest": "^4.30.0",
    "yerror": "^8.0.0",
    "yhttperror": "^8.0.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.16.0",
    "@swc/cli": "^0.5.2",
    "@swc/core": "^1.10.0",
    "@swc/helpers": "^0.5.15",
    "@swc/jest": "^0.2.37",
    "axios": "^1.7.9",
    "esbuild-node-externals": "^1.15.0",
    "eslint": "^9.16.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-jest": "^28.9.0",
    "eslint-plugin-prettier": "^5.2.1",
    "jest": "^29.7.0",
    "jsarch": "^6.1.2",
    "prettier": "^3.4.2",
    "rimraf": "^6.0.1",
    "schema2dts": "^7.0.2",
    "tsx": "^4.7.1",
    "typescript": "^5.7.2",
    "typescript-eslint": "^8.17.0"
  },
  "prettier": {
    "semi": true,
    "printWidth": 80,
    "singleQuote": true,
    "trailingComma": "all",
    "proseWrap": "always"
  },
  "jest": {
    "coverageReporters": [
      "lcov",
      "html"
    ],
    "testPathIgnorePatterns": [
      "/node_modules/"
    ],
    "roots": [
      "<rootDir>/src"
    ],
    "testEnvironment": "node",
    "transform": {
      "^.+\\\\.tsx?$": [
        "@swc/jest",
        {}
      ]
    },
    "moduleNameMapper": {
      "#(.*)": "<rootDir>/../../node_modules/$1",
      "(.+)\\\\.js": "$1"
    },
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "prettierPath": null
  },
  "overrides": {
    "eslint": "^9.16.0"
  }
}",
    ],
    [
      "/home/whoiam/projects/yolo/tsconfig.json",
      "{
  "compilerOptions": {
    "module": "Node16",
    "moduleResolution": "Node16",
    "target": "es2022",
    "noImplicitAny": false,
    "removeComments": false,
    "preserveConstEnums": true,
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "strict": true,
    "declaration": true,
    "outDir": "dist",
    "sourceMap": true
  },
  "include": [
    "src/**/*.ts"
  ],
  "exclude": [
    "node_modules"
  ]
}",
    ],
    [
      "/home/whoiam/projects/yolo/LICENSE",
      "Copyright Wayne Campbell, all rights reserved.",
    ],
    [
      "/home/whoiam/projects/yolo/.gitignore",
      "node_modules

# Whook's files
builds/
.env*
",
    ],
  ],
  "readFileCalls": [
    [
      "/var/lib/node/node_modules/whook-example/package.json",
    ],
    [
      "/var/lib/node/node_modules/whook-example/src/watch.ts",
    ],
    [
      "/var/lib/node/node_modules/whook-example/README.md",
    ],
  ],
  "readdirCalls": [
    [
      "/var/lib/node/node_modules/whook-example/package.json",
    ],
    [
      "/var/lib/node/node_modules/whook-example/src/watch.ts",
    ],
    [
      "/var/lib/node/node_modules/whook-example/README.md",
    ],
  ],
}
`;
